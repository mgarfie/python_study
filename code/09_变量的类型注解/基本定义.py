from typing import Union
import random

a: int = 1
# b: int = "sadj"             # 这里就可以看出来，注解类型与实际类型可以不同，不会报错，但是没有意义

c: bool = True
d: list = [12, 12, 32, 1]

e: list[int, str] = [2, "sad"]


class App:
    pass

var_1 = random.randint(1, 10)       # type:int

# —-----------------对形参进行注解--------------------------
def func(x: int, y: str):
    pass
func()          # 此时就可以看出传递的参数为什么类型了（ctrl+p）
# —-----------------对返回值进行注解--------------------------
def add(x) -> int:
    return x



# 类型注解主要功能在于:
    # 1.帮助第三方IDE工具（如PyCharm）对代码进行类型推断，协助做代码提示
    # 2.帮助开发者自身对变量讲行类型注释备注,并不会真正的对类型做验证和判断,也就是，类型注解仅仅是提示性的，不是决定性的
    # 3.没有注解中文这一说

# ===========================================================================================

# ---------------------当需要二选一时，可以引入别的模块来注解----------------------------------

my_list : list[Union[str, int]] = [1,2, "test"]
def a(x, y: Union[int, str]) ->Union[int, str]:
    pass
a(19, "发")




# 使用Union可以定义联合类型注解
